{"ast":null,"code":"var _jsxFileName = \"/Users/chrisshen/Desktop/fox/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nexport default class Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      metadata: null,\n      success: 0,\n      code: React.createElement(Button, {\n        className: \"Button\",\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => this.getCode(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Request Unlock Code\")\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const email = this.state.email;\n      const password = this.state.password;\n      axios.post(\"https://5d2314ac.ngrok.io/login\", {\n        email,\n        password\n      }).then(res => {\n        console.log(res);\n        console.log(res.data);\n        this.setState({\n          message: res.data.message,\n          success: 0\n        });\n\n        if (this.state.message == \"success\") {\n          this.setState({\n            success: 1,\n            metadata: res.data.metadata\n          });\n        } else {\n          this.setState({\n            success: 0\n          });\n        }\n      });\n    };\n  }\n\n  getCode() {\n    console.log('get code');\n    const email = this.state.email;\n    axios.post(\"https://5d2314ac.ngrok.io/get_code\", {\n      email\n    }).then(res => this.setState({\n      code: React.createElement(\"h2\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, res.data.code)\n    }));\n  }\n\n  render() {\n    let error = React.createElement(Typography, {\n      color: \"secondary\",\n      component: \"h5\",\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.message, \" \");\n\n    if (this.state.success == 1) {\n      error = null;\n    }\n\n    let homepage = React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        left: '50%',\n        top: '35%',\n        transform: 'translate(-50%, -50%)'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: \"center\",\n      component: \"h1\",\n      variant: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"F\\xF6X\"), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Sign in\"), error, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onChange: this.handleChange,\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      onChange: this.handleChange,\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        value: \"remember\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }),\n      label: \"Remember me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"Button\",\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Forgot password?\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"#\",\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Don't have an account? Sign Up\"))))));\n    if (this.state.success == 0) return homepage;else {\n      let requestpage = 'hello';\n\n      if (this.state.metadata) {\n        requestpage = React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: this.state.metadata.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }), 'Your order: ' + this.state.metadata.order + ' is ready!', React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }), this.state.code);\n      }\n\n      return requestpage;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/chrisshen/Desktop/fox/src/App.js"],"names":["React","axios","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","makeStyles","Container","Login","Component","state","email","password","metadata","success","code","getCode","handleChange","evt","setState","target","name","value","handleSubmit","event","preventDefault","post","then","res","console","log","data","message","textAlign","render","error","homepage","position","left","top","transform","requestpage","image","order"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n\nexport default class Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    metadata: null,\n    success: 0,\n    code: (<Button\n              className='Button'\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.getCode()}\n            >\n              Request Unlock Code\n            </Button>)\n  }\n\n  handleChange = evt => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const email = this.state.email\n\n    const password = this.state.password\n\n    axios.post(`https://5d2314ac.ngrok.io/login`, { email, password})\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n        this.setState({message: res.data.message,\n                        success: 0});\n        if (this.state.message == \"success\") {\n          this.setState({success : 1, metadata: res.data.metadata})\n        } else {\n          this.setState({success : 0})\n        }\n      })\n  }\n\n  getCode() {\n    console.log('get code')\n    const email = this.state.email;\n    axios.post(`https://5d2314ac.ngrok.io/get_code`, { email })\n      .then(res => this.setState({code: (<h2 style={{textAlign: 'center'}}>{res.data.code}</h2>)}));\n\n  }\n\n\n  \n  render() {\n    let error = (<Typography color='secondary' component=\"h5\" variant=\"body1\">\n          {this.state.message} </Typography>)\n    if (this.state.success == 1){\n        error = null;\n    }\n    \n    let homepage = (<Container component=\"main\" maxWidth=\"xs\">\n\n      <div style={{\n        position: 'absolute', left: '50%', top: '35%',\n        transform: 'translate(-50%, -50%)'\n        }}>\n        <Typography align='center' component=\"h1\" variant=\"h1\">\n          FöX\n        </Typography>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        {error}\n        <form  onSubmit={this.handleSubmit} noValidate>\n          <TextField\n          onChange={this.handleChange}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n          onChange={this.handleChange}\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            className='Button'\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>);\n\n    \n    if (this.state.success == 0)\n      return homepage;\n    else {\n      let requestpage = 'hello';\n      if (this.state.metadata) {\n      requestpage = (\n        <Container>\n          <img src={this.state.metadata.image} />\n          { 'Your order: ' + this.state.metadata.order + ' is ready!' }\n          <br/>\n          {this.state.code}\n          \n        </Container>\n      );\n    }\n       return requestpage;\n    }\n\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}